<div class="container mt-4">
    <h2 class="mb-4">Mi Carrito de Compras 🛒</h2>

    <div id="cart-container" class="list-group">
        {{#if cart.products.length}}
        
        <!-- Botón para limpiar todo el carrito -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="mb-0">Productos en tu carrito:</h4>
            <button class="btn btn-outline-danger btn-sm" onclick="clearCart('{{cart._id}}')">
                <i class="bi bi-trash"></i> Vaciar Carrito
            </button>
        </div>

        {{#each cart.products}}
        {{#if this.product}}
        <div class="list-group-item list-group-item-action" id="cart-item-{{this.product._id}}">
            <div class="d-flex justify-content-between align-items-center">
                <div class="flex-grow-1">
                    <h5 class="mb-1">{{this.product.title}}</h5>
                    <p class="mb-1">Precio Unitario: ${{this.product.price}}</p>
                    <p class="mb-1"><strong>Subtotal: ${{this.subtotal}}</strong></p>
                </div>
                <div class="d-flex align-items-center gap-3">
                    <span class="badge bg-primary rounded-pill">Cantidad: {{this.quantity}}</span>
                    <button class="btn btn-outline-danger btn-sm" 
                            onclick="removeProductFromCart('{{../cart._id}}', '{{this.product._id}}', '{{this.product.title}}')"
                            title="Eliminar producto">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            </div>
        </div>
        {{/if}}
        {{/each}}

        <!-- Botones de acción -->
        <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center mt-3">
            <div>
                <strong>Total: ${{cart.total}}</strong>
            </div>
            <div class="d-flex gap-2">
                <a href="/products" class="btn btn-outline-primary">Seguir Comprando</a>
                <button id="purchase-btn" class="btn btn-success" onclick="purchaseCart('{{cart._id}}')">
                    Finalizar Compra
                </button>
            </div>
        </div>
        {{else}}
        <div class="alert alert-info" role="alert">
            Tu carrito está vacío en este momento. ¡<a href="/products" class="alert-link">Explora nuestros
                productos</a>!
        </div>
        {{/if}}
    </div>

    <div id="purchase-result" class="mt-4"></div>
</div>

<script>
    async function purchaseCart(cartId) {
        const resultDiv = document.getElementById('purchase-result');
        const purchaseBtn = document.getElementById('purchase-btn');

        purchaseBtn.disabled = true;
        resultDiv.innerHTML = `<div class="alert alert-info">Procesando tu compra...</div>`;

        try {
            // Obtener el token del localStorage
            const token = localStorage.getItem('jwt_token');
            
            if (!token) {
                resultDiv.innerHTML = `<div class="alert alert-danger">Debes iniciar sesión para realizar la compra.</div>`;
                purchaseBtn.disabled = false;
                setTimeout(() => {
                    window.location.href = '/login';
                }, 2000);
                return;
            }

            console.log('Making purchase request to:', `/api/carts/${cartId}/purchase`);

            const response = await fetch(`/api/carts/${cartId}/purchase`, {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });
            
            console.log('Purchase response status:', response.status);
            console.log('Purchase response ok:', response.ok);
            
            const data = await response.json();
            console.log('Purchase response data:', data);

            if (response.ok) {
                console.log('Purchase successful, data:', data);
                
                resultDiv.innerHTML = `
                <div class="alert alert-success">
                    <h4>¡Compra Exitosa!</h4>
                    <p><strong>Código del Ticket:</strong> ${data.payload.ticket.code}</p>
                    <p><strong>Monto Total:</strong> $${data.payload.ticket.amount}</p>
                    <p>¡Gracias por tu compra!</p>
                    ${data.payload.partialPurchase ? `
                    <div class="alert alert-warning mt-2">
                        <small>Nota: Algunos productos no tenían stock suficiente y no fueron incluidos en la compra.</small>
                    </div>
                    ` : ''}
                    <hr>
                    <div class="d-flex gap-2">
                        <a href="/products" class="btn btn-primary">Seguir Comprando</a>
                        <button onclick="window.print()" class="btn btn-outline-secondary">Imprimir Ticket</button>
                    </div>
                </div>
            `;
                document.getElementById('cart-container').style.display = 'none';

            } else if (response.status === 401) {
                resultDiv.innerHTML = `<div class="alert alert-danger">Tu sesión ha expirado. Por favor, inicia sesión nuevamente.</div>`;
                localStorage.removeItem('jwt_token');
                setTimeout(() => {
                    window.location.href = '/login';
                }, 2000);
            } else {
                resultDiv.innerHTML = `<div class="alert alert-danger">${data.message || 'Error desconocido al procesar la compra.'}</div>`;
                purchaseBtn.disabled = false;
            }
        } catch (error) {
            console.error('Purchase error:', error);
            resultDiv.innerHTML = `<div class="alert alert-danger">Error de conexión al procesar la compra. Por favor, revisa tu conexión e inténtalo de nuevo.</div>`;
            purchaseBtn.disabled = false;
        }
    }

    async function removeProductFromCart(cartId, productId, productTitle) {
        if (!confirm(`¿Estás seguro de que quieres eliminar "${productTitle}" del carrito?`)) {
            return;
        }

        const token = localStorage.getItem('jwt_token');
        if (!token) {
            if (typeof Toastify !== 'undefined') {
                Toastify({
                    text: "Debes iniciar sesión para modificar el carrito",
                    duration: 3000,
                    gravity: "bottom",
                    position: "right",
                    style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }
                }).showToast();
            }
            setTimeout(() => window.location.href = '/login', 1500);
            return;
        }

        try {
            const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                // Recargar la página para mostrar el carrito actualizado
                window.location.reload();
            } else if (response.status === 401) {
                if (typeof Toastify !== 'undefined') {
                    Toastify({
                        text: "Tu sesión ha expirado. Redirigiendo al login...",
                        duration: 2000,
                        gravity: "bottom",
                        position: "right",
                        style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }
                    }).showToast();
                }
                localStorage.removeItem('jwt_token');
                setTimeout(() => window.location.href = '/login', 2000);
            } else {
                const data = await response.json();
                if (typeof Toastify !== 'undefined') {
                    Toastify({
                        text: data.message || "Error al eliminar el producto",
                        duration: 3000,
                        gravity: "bottom",
                        position: "right",
                        style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }
                    }).showToast();
                }
            }
        } catch (error) {
            console.error('Error:', error);
            if (typeof Toastify !== 'undefined') {
                Toastify({
                    text: "Error de conexión",
                    duration: 3000,
                    gravity: "bottom",
                    position: "right",
                    style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }
                }).showToast();
            }
        }
    }

    async function clearCart(cartId) {
        if (!confirm('¿Estás seguro de que quieres vaciar todo el carrito? Esta acción no se puede deshacer.')) {
            return;
        }

        const token = localStorage.getItem('jwt_token');
        if (!token) {
            if (typeof Toastify !== 'undefined') {
                Toastify({
                    text: "Debes iniciar sesión para modificar el carrito",
                    duration: 3000,
                    gravity: "bottom",
                    position: "right",
                    style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }
                }).showToast();
            }
            setTimeout(() => window.location.href = '/login', 1500);
            return;
        }

        try {
            const response = await fetch(`/api/carts/${cartId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                if (typeof Toastify !== 'undefined') {
                    Toastify({
                        text: "Carrito vaciado exitosamente",
                        duration: 2000,
                        gravity: "bottom",
                        position: "right",
                        style: { background: "linear-gradient(to right, #00b09b, #96c93d)" }
                    }).showToast();
                }
                // Recargar la página para mostrar el carrito vacío
                setTimeout(() => window.location.reload(), 1000);
            } else if (response.status === 401) {
                if (typeof Toastify !== 'undefined') {
                    Toastify({
                        text: "Tu sesión ha expirado. Redirigiendo al login...",
                        duration: 2000,
                        gravity: "bottom",
                        position: "right",
                        style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }
                    }).showToast();
                }
                localStorage.removeItem('jwt_token');
                setTimeout(() => window.location.href = '/login', 2000);
            } else {
                const data = await response.json();
                if (typeof Toastify !== 'undefined') {
                    Toastify({
                        text: data.message || "Error al vaciar el carrito",
                        duration: 3000,
                        gravity: "bottom",
                        position: "right",
                        style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }
                    }).showToast();
                }
            }
        } catch (error) {
            console.error('Error:', error);
            if (typeof Toastify !== 'undefined') {
                Toastify({
                    text: "Error de conexión",
                    duration: 3000,
                    gravity: "bottom",
                    position: "right",
                    style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" }
                }).showToast();
            }
        }
    }
</script>